

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




model User {
  id                String                  @id @default(cuid())
  name         String
  email             String             @unique
  hashedPassword String?
  shares       Share[]
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
   }

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


model FoodBank {
  id               String                @id @default(cuid())
  name             String
  description      String
  address          String?
  city             String?
  state            String?
  website          String?
  shares       Share[]
 
}

model Share {
  id           String       @id @default(cuid())
  user         User      @relation(fields: [userId], references: [id])
  foodBank    FoodBank  @relation(fields: [foodBankId], references: [id])
  userId       String
  foodBankId   String
  createdAt    DateTime  @default(now())
}